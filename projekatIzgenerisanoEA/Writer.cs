///////////////////////////////////////////////////////////
//  Writer.cs
//  Implementation of the Class Writer
//  Generated by Enterprise Architect
//  Created on:      19-mar-2018 23.02.25
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using projekatRES3;
using Project;
using System.Threading;

namespace projekatRES3 {
	public class Writer : IWriter {

		public projekatRES3.LoadBalancer m_LoadBalancer;

		public Writer(){
            m_LoadBalancer = new LoadBalancer();
		}

		~Writer(){

		}
        //writer salje zahtev LoadBalancer-u da upali novi ili ugasi postojeci worker


        public bool WriteToLoadBalancer(Code code, int value)
        {
            Logger.Log("LoadBalancer received from Writer:\n\tData: " + code + ", " + value + "\n\tTime: " + DateTime.Now);

            return m_LoadBalancer.ReceiveFromWriter(code, value);
        }

        public void GenerateData()
        {
            while(true)
            {
                Random random = new Random();

                WriteToLoadBalancer((Code)random.Next(8), random.Next(8000));

                Thread.Sleep(2000); //salje svake dvije sekunde
            }
        }

        public bool RequestForTurnOnOff(bool turnOn)
        {
            return m_LoadBalancer.ReceiveTurnOnOff(turnOn);
        }
    }//end Writer

}//end namespace projekatRES3