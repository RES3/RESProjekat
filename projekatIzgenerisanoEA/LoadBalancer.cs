///////////////////////////////////////////////////////////
//  LoadBalancer.cs
//  Implementation of the Class LoadBalancer
//  Generated by Enterprise Architect
//  Created on:      19-mar-2018 23.02.24
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using projekatRES3;
using ClassLibrary;

namespace projekatRES3 {
	public class LoadBalancer : ILoadBalancer {

		public List<Worker> m_Worker;
        public static List<LoadBalancerProperty> tempList;
        Worker worker;
        public static bool receivedFromWriter = false;
        //da li je worker upaljen ili ugasen
        public static bool worker1 = true;
        public static bool worker2 = true;
        public static bool worker3 = true;
        public static bool worker4 = true;

		public LoadBalancer(){
            tempList = new List<LoadBalancerProperty>();
            m_Worker = new List<Worker>(4);
            worker = new Worker();
		}

		~LoadBalancer(){

		}

        public bool ReceiveFromWriter(Code code, int value)
        {
            //tempList.Add(new LoadBalancerProperty() { Code = code, Valuee = value});
            //poslati Workeru
            //tempList = new List<LoadBalancerProperty>();
            
            try
            {
                tempList.Add(new LoadBalancerProperty() { Code = code, Valuee = value });
                receivedFromWriter = true;
                return true;
            }
            catch(Exception)
            {
                receivedFromWriter = false;
                return false;
            }
        }

        public bool ReceiveTurnOnOff(bool turnOn)
        {
           if(turnOn == true)
           {
                if (worker1 == false)
                {
                    worker1 = true;
                }
                else if (worker2 == false)
                {
                    worker2 = true;
                }
                else if(worker3 == false)
                {
                    worker3 = true;
                }
                else if(worker4 == false)
                {
                    worker4 = true;
                }
           }
           else
           {
                if (worker1 == true)
                {
                    worker1 = false;
                }
                else if (worker2 == true)
                {
                    worker2 = false;
                }
                else if (worker3 == true)
                {
                    worker3 = false;
                }
                else if (worker4 == true)
                {
                    worker4 = false;
                }
            }

           //prepraviti; break posle svakog?
           return true;
        }

        public bool SendToWorker()
        {
            //u ovoj metodi cemo raditi i rasporedjivanja po workerima
            try
            {
                if (receivedFromWriter == true)
                {
                    worker.ReceiveFromLoadBalancer(tempList[0].Code, tempList[0].Valuee);
                    tempList = new List<LoadBalancerProperty>();
                    return true;
                }
                return false;
            }
            catch(Exception)
            {
                return false;
            }
            
        }

    }//end LoadBalancer

}//end namespace projekatRES3